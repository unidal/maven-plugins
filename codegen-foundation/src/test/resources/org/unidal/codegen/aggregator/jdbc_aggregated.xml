<entities gen="true">
   <entity name="user" table="user" alias="u" do-package="org.unidal.app.user.dal" bo-package="org.unidal.app.user.dal">
      <member name="user-id" field="user_id" value-type="int" nullable="false" key="true" auto-increment="true"/>
      <member name="user-name" field="full_name" value-type="String" nullable="false"/>
      <member name="creation-date" field="creation_date" value-type="Date" insert-expr="NOW()"/>
      <member name="last-modified-date" field="last_modified_date" value-type="Date" nullable="false" insert-expr="NOW()" update-expr="NOW()"/>
      <var name="key-user-id" value-type="int" key-member="user-id"/>
      <primary-key name="PRIMARY" members="user_id"/>
      <readsets>
         <readset name="FULL" all="true"/>
         <readset name="FULL_HOME">
            <readset-ref name="FULL"/>
            <readset-ref name="FULL" relation-name="home-address"/>
         </readset>
         <readset name="FULL_OFFICE">
            <readset-ref name="FULL"/>
            <readset-ref name="FULL" relation-name="office-address"/>
         </readset>
         <readset name="FULL_HOME_OFFICE">
            <readset-ref name="FULL"/>
            <readset-ref name="FULL" relation-name="home-address"/>
            <readset-ref name="FULL" relation-name="office-address"/>
         </readset>
         <readset name="FULL_HOME_OFFICE_BILLING">
            <readset-ref name="FULL"/>
            <readset-ref name="FULL" relation-name="home-address"/>
            <readset-ref name="FULL" relation-name="office-address"/>
            <readset-ref name="FULL" relation-name="billing-address"/>
         </readset>
      </readsets>
      <updatesets>
         <updateset name="FULL" all="true"/>
      </updatesets>
      <query-defs>
         <query name="find-by-PK" type="SELECT">
            <param name="key-user-id"/>
            <statement><![CDATA[

                  SELECT <FIELDS/>
                  FROM <TABLE/>
                  WHERE <FIELD name='user-id'/> = ${key-user-id}
                           ]]></statement>
         </query>
         <query name="insert" type="INSERT" enabled="false">
            <statement><![CDATA[

                  INSERT
                  INTO <TABLE/>
                  <FIELDS/>
                           ]]></statement>
         </query>
         <query name="update-by-PK" type="UPDATE">
            <param name="key-user-id"/>
            <statement><![CDATA[

                  UPDATE <TABLE/>
                  SET <FIELDS/>
                  WHERE <FIELD name='user-id'/> = ${key-user-id}
                     AND status = 1
                           ]]></statement>
         </query>
         <query name="delete-by-PK" type="DELETE" enabled="false">
            <param name="key-user-id"/>
            <statement><![CDATA[

                  DELETE
                  FROM <TABLE/>
                  WHERE <FIELD name='user-id'/> = ${key-user-id}
                           ]]></statement>
         </query>
         <query name="find-all" type="SELECT" multiple="true">
            <statement><![CDATA[

            SELECT <FIELDS/>
            FROM <TABLE/>
                        ]]></statement>
         </query>
      </query-defs>
      <relation name="home-address" entity-name="user-address" entity-alias="hua" join="u.user_id=hua.user_id and hua.type='H'"/>
      <relation name="office-address" entity-name="user-address" entity-alias="oua" join="u.user_id=oua.user_id and hua.type='O'"/>
      <relation name="billing-address" entity-name="user-address" entity-alias="bua" join="u.user_id=bua.user_id and hua.type='B'"/>
   </entity>
   <entity name="user-address" table="user_address" alias="ua" do-package="org.unidal.app.useraddress.dal" bo-package="org.unidal.app.useraddress.dal">
      <member name="user-id" field="user_id" value-type="int" nullable="false" key="true"/>
      <member name="type" field="type" value-type="String" nullable="false" key="true"/>
      <member name="address" field="address" value-type="String" nullable="false"/>
      <member name="creation-date" field="creation_date" value-type="Date" insert-expr="NOW()"/>
      <member name="last-modified-date" field="last_modified_date" value-type="Date" nullable="false" insert-expr="NOW()" update-expr="NOW()"/>
      <var name="key-user-id" value-type="String" key-member="user-id"/>
      <var name="key-type" value-type="String" key-member="type"/>
      <primary-key name="PRIMARY" members="user_id, type"/>
      <readsets>
         <readset name="FULL" all="true"/>
      </readsets>
      <updatesets>
         <updateset name="FULL" all="true"/>
      </updatesets>
      <query-defs>
         <query name="find-by-PK" type="SELECT">
            <param name="key-user-id"/>
            <param name="key-type"/>
            <statement><![CDATA[

                  SELECT <FIELDS/>
                  FROM <TABLE/>
                  WHERE <FIELD name='user-id'/> = ${key-user-id}
                     AND <FIELD name='type'/> = ${key-type}
                           ]]></statement>
         </query>
         <query name="insert" type="INSERT">
            <statement><![CDATA[

                  INSERT
                  INTO <TABLE/>
                  <FIELDS/>
                           ]]></statement>
         </query>
         <query name="update-by-PK" type="UPDATE">
            <param name="key-user-id"/>
            <param name="key-type"/>
            <statement><![CDATA[

                  UPDATE <TABLE/>
                  SET <FIELDS/>
                  WHERE <FIELD name='user-id'/> = ${key-user-id}
                     AND <FIELD name='type'/> = ${key-type}
                           ]]></statement>
         </query>
         <query name="delete-by-PK" type="DELETE">
            <param name="key-user-id"/>
            <param name="key-type"/>
            <statement><![CDATA[

                  DELETE
                  FROM <TABLE/>
                  WHERE <FIELD name='user-id'/> = ${key-user-id}
                     AND <FIELD name='type'/> = ${key-type}
                           ]]></statement>
         </query>
         <query name="find-all-by-user-id" type="SELECT" multiple="true">
            <param name="user-id"/>
            <statement><![CDATA[

            SELECT <FIELDS/>
            FROM <TABLE/>
            WHERE <FIELD name='user-id'/> = ${user-id}
                        ]]></statement>
         </query>
      </query-defs>
   </entity>
</entities>
