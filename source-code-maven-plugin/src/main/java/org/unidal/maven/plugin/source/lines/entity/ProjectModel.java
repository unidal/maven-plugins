/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package org.unidal.maven.plugin.source.lines.entity;

import static org.unidal.maven.plugin.source.lines.Constants.ATTR_NAME;
import static org.unidal.maven.plugin.source.lines.Constants.ENTITY_PROJECT;

import java.util.LinkedHashMap;
import java.util.Map;

import org.unidal.maven.plugin.source.lines.BaseEntity;
import org.unidal.maven.plugin.source.lines.IVisitor;

public class ProjectModel extends BaseEntity<ProjectModel> {
   private String m_name;

   private CountModel m_count;

   private Map<ClassModel, ClassModel> m_classes = new LinkedHashMap<ClassModel, ClassModel>();

   public ProjectModel() {
   }

   public ProjectModel(String name) {
      m_name = name;
   }

   @Override
   public void accept(IVisitor visitor) {
      visitor.visitProject(this);
   }

   public ProjectModel addClass(ClassModel _class) {
      m_classes.put(_class, _class);
      return this;
   }

   @Override
   public boolean equals(Object obj) {
      if (obj instanceof ProjectModel) {
         ProjectModel _o = (ProjectModel) obj;

         if (!equals(getName(), _o.getName())) {
            return false;
         }

         return true;
      }

      return false;
   }

   public ClassModel findClass(String _package, String _class) {
      return m_classes.get(new ClassModel(_package, _class));
   }

   public ClassModel findOrCreateClass(String _package, String _class) {
      ClassModel _key = new ClassModel(_package, _class);
      ClassModel class_ = m_classes.get(_key);

      if (class_ == null) {
         synchronized (m_classes) {
            class_ = m_classes.get(_key);

            if (class_ == null) {
               class_ = _key;
               m_classes.put(_key, class_);
            }
         }
      }

      return class_;
   }

   public Map<ClassModel, ClassModel> getClasses() {
      return m_classes;
   }

   public CountModel getCount() {
      return m_count;
   }

   public String getName() {
      return m_name;
   }

   @Override
   public int hashCode() {
      int hash = 0;

      hash = hash * 31 + (m_name == null ? 0 : m_name.hashCode());

      return hash;
   }

   @Override
   public void mergeAttributes(ProjectModel other) {
      assertAttributeEquals(other, ENTITY_PROJECT, ATTR_NAME, m_name, other.getName());

   }

   public ClassModel removeClass(String _package, String _class) {
      return m_classes.remove(new ClassModel(_package, _class));
   }

   public ProjectModel setCount(CountModel count) {
      m_count = count;
      return this;
   }

   public ProjectModel setName(String name) {
      m_name = name;
      return this;
   }

}
