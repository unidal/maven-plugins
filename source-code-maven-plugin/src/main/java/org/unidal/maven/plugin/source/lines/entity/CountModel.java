/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package org.unidal.maven.plugin.source.lines.entity;

import org.unidal.maven.plugin.source.lines.BaseEntity;
import org.unidal.maven.plugin.source.lines.IVisitor;

public class CountModel extends BaseEntity<CountModel> {
   private int m_lines;

   private int m_empty;

   private int m_comment;

   private int m_files;

   private int m_generatedFiles;

   private int m_testFiles;

   public CountModel() {
   }

   @Override
   public void accept(IVisitor visitor) {
      visitor.visitCount(this);
   }

   @Override
   public boolean equals(Object obj) {
      if (obj instanceof CountModel) {
         CountModel _o = (CountModel) obj;

         if (getLines() != _o.getLines()) {
            return false;
         }

         if (getEmpty() != _o.getEmpty()) {
            return false;
         }

         if (getComment() != _o.getComment()) {
            return false;
         }

         if (getFiles() != _o.getFiles()) {
            return false;
         }

         if (getGeneratedFiles() != _o.getGeneratedFiles()) {
            return false;
         }

         if (getTestFiles() != _o.getTestFiles()) {
            return false;
         }


         return true;
      }

      return false;
   }

   public int getComment() {
      return m_comment;
   }

   public int getEmpty() {
      return m_empty;
   }

   public int getFiles() {
      return m_files;
   }

   public int getGeneratedFiles() {
      return m_generatedFiles;
   }

   public int getLines() {
      return m_lines;
   }

   public int getTestFiles() {
      return m_testFiles;
   }

   @Override
   public int hashCode() {
      int hash = 0;

      hash = hash * 31 + m_lines;
      hash = hash * 31 + m_empty;
      hash = hash * 31 + m_comment;
      hash = hash * 31 + m_files;
      hash = hash * 31 + m_generatedFiles;
      hash = hash * 31 + m_testFiles;

      return hash;
   }

   public CountModel incComment() {
      m_comment++;
      return this;
   }

   public CountModel incComment(int comment) {
      m_comment += comment;
      return this;
   }

   public CountModel incEmpty() {
      m_empty++;
      return this;
   }

   public CountModel incEmpty(int empty) {
      m_empty += empty;
      return this;
   }

   public CountModel incFiles() {
      m_files++;
      return this;
   }

   public CountModel incFiles(int files) {
      m_files += files;
      return this;
   }

   public CountModel incGeneratedFiles() {
      m_generatedFiles++;
      return this;
   }

   public CountModel incGeneratedFiles(int generatedFiles) {
      m_generatedFiles += generatedFiles;
      return this;
   }

   public CountModel incLines() {
      m_lines++;
      return this;
   }

   public CountModel incLines(int lines) {
      m_lines += lines;
      return this;
   }

   public CountModel incTestFiles() {
      m_testFiles++;
      return this;
   }

   public CountModel incTestFiles(int testFiles) {
      m_testFiles += testFiles;
      return this;
   }

   @Override
   public void mergeAttributes(CountModel other) {
      m_lines = other.getLines();

      m_empty = other.getEmpty();

      m_comment = other.getComment();

      m_files = other.getFiles();

      m_generatedFiles = other.getGeneratedFiles();

      m_testFiles = other.getTestFiles();
   }

   public CountModel setComment(int comment) {
      m_comment = comment;
      return this;
   }

   public CountModel setEmpty(int empty) {
      m_empty = empty;
      return this;
   }

   public CountModel setFiles(int files) {
      m_files = files;
      return this;
   }

   public CountModel setGeneratedFiles(int generatedFiles) {
      m_generatedFiles = generatedFiles;
      return this;
   }

   public CountModel setLines(int lines) {
      m_lines = lines;
      return this;
   }

   public CountModel setTestFiles(int testFiles) {
      m_testFiles = testFiles;
      return this;
   }

   /********* Code Snippet Start *********/
   public void add(CountModel count) {
      m_lines += count.m_lines;
      m_empty += count.m_empty;
      m_comment += count.m_comment;
      m_files += count.m_files;
      m_generatedFiles += count.m_generatedFiles;
      m_testFiles += count.m_testFiles;
   }

   /********* Code Snippet End *********/
}
