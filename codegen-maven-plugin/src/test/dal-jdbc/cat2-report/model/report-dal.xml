<?xml version="1.0" encoding="UTF-8"?>
<entities do-package="org.unidal.cat.core.report.dal" gen="true" do-class-suffix="Do">
  <entity name="history-report" table="history_report" alias="hr">
    <var name="start-date" value-type="Date" />
    <var name="end-date" value-type="Date" />
    <readsets>
      <readset name="DOMAIN">
         <member name="domain" />
      </readset>
    </readsets>
    <query-defs>
      <query name="insert" type="INSERT">
        <statement><![CDATA[
        INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)
        ON DUPLICATE KEY UPDATE 
           <FIELD name='ip'/> = ${ip},
           <FIELD name='creation-date'/> = NOW()
        ]]></statement>
      </query>
      <query name="find-all-by-type-and-name-and-date-range" type="SELECT" multiple="true">
        <param name="type" />
        <param name="name" />
        <param name="start-date" />
        <param name="end-date" />
        <statement><![CDATA[
        SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='type'/> = ${type}
           AND <FIELD name='name'/> = ${name}
           AND <FIELD name='start-time'/> BETWEEN ${start-date} AND ${end-date}
        ]]></statement>
      </query>
      <query name="find-by-domain-and-type-and-name-and-start-time" type="SELECT">
        <param name="domain" />
        <param name="type" />
        <param name="name" />
        <param name="start-time" />
        <statement><![CDATA[
        SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='domain'/> = ${domain}
           AND <FIELD name='type'/> = ${type}
           AND <FIELD name='name'/> = ${name}
           AND <FIELD name='start-time'/> = ${start-time}
        ]]></statement>
      </query>
      <query name="find-all-by-domain-and-type-and-name-and-date-range" type="SELECT" multiple="true">
        <param name="domain" />
        <param name="type" />
        <param name="name" />
        <param name="start-date" />
        <param name="end-date" />
        <statement><![CDATA[
        SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='domain'/> = ${domain}
           AND <FIELD name='type'/> = ${type}
           AND <FIELD name='name'/> = ${name}
           AND <FIELD name='start-time'/> BETWEEN ${start-date} AND ${end-date}
        ]]></statement>
      </query>
    </query-defs>
  </entity>
  <entity name="history-report-content" table="history_report_content" alias="hrc">
    <query-defs>
      <query name="insert" type="INSERT">
        <statement><![CDATA[
        INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)
        ON DUPLICATE KEY UPDATE 
           <FIELD name='content'/> = ${content},
           <FIELD name='creation-date'/> = NOW()
        ]]></statement>
      </query>
    </query-defs>
  </entity>
  <entity name="hourly-report" table="hourly_report" alias="hr2">
    <var name="start-date" value-type="Date" />
    <var name="end-date" value-type="Date" />
    <readsets>
      <readset name="DOMAIN">
         <member name="domain" />
      </readset>
    </readsets>
    <query-defs>
      <query name="insert" type="INSERT">
        <statement><![CDATA[
        INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)
        ON DUPLICATE KEY UPDATE 
           <FIELD name='ip'/> = ${ip},
           <FIELD name='creation-date'/> = NOW()
        ]]></statement>
      </query>
      <query name="find-all-by-name-and-date-range" type="SELECT" multiple="true">
        <param name="name" />
        <param name="start-date" />
        <param name="end-date" />
        <statement><![CDATA[
        SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='name'/> = ${name}
           AND <FIELD name='start-time'/> BETWEEN ${start-date} AND ${end-date}
        ]]></statement>
      </query>
      <query name="find-all-by-domain-and-name-and-start-time" type="SELECT" multiple="true">
        <param name="domain" />
        <param name="name" />
        <param name="start-time" />
        <statement><![CDATA[
        SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='domain'/> = ${domain}
           AND <FIELD name='name'/> = ${name}
           AND <FIELD name='start-time'/> = ${start-time}
        ]]></statement>
      </query>
      <query name="find-all-by-domain-and-name-and-date-range" type="SELECT" multiple="true">
        <param name="domain" />
        <param name="name" />
        <param name="start-date" />
        <param name="end-date" />
        <statement><![CDATA[
        SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='domain'/> = ${domain}
           AND <FIELD name='name'/> = ${name}
           AND <FIELD name='start-time'/> BETWEEN ${start-date} AND ${end-date}
        ]]></statement>
      </query>
    </query-defs>
  </entity>
  <entity name="hourly-report-content" table="hourly_report_content" alias="hrc2">
    <query-defs>
      <query name="insert" type="INSERT">
        <statement><![CDATA[
        INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)
        ON DUPLICATE KEY UPDATE 
           <FIELD name='content'/> = ${content},
           <FIELD name='creation-date'/> = NOW()
        ]]></statement>
      </query>
    </query-defs>
  </entity>
  <entity name="report-task" table="report_task" alias="rt">
    <member name="id" field="id" value-type="int" length="10" nullable="false" key="true" auto-increment="true" />
    <member name="task-type" field="task_type" value-type="int" length="10" nullable="false" />
    <member name="report-name" field="report_name" value-type="String" length="30" nullable="false" />
    <member name="report-start-time" field="report_start_time" value-type="Date" nullable="false" />
    <member name="schedule-time" field="schedule_time" value-type="Date" nullable="false" />
    <member name="status" field="status" value-type="int" length="3" nullable="false" />
    <member name="producer-ip" field="producer_ip" value-type="String" length="20" nullable="false" />
    <member name="expected-done-date" field="expected_done_date" value-type="Date" nullable="false" />
    <member name="creation-date" field="creation_date" value-type="Date" nullable="false" insert-expr="NOW()" />
    <member name="last-modified-date" field="last_modified_date" value-type="Date" nullable="false" insert-expr="NOW()" update-expr="NOW()" />
    <member name="failure-count" field="failure_count" value-type="int" length="3" nullable="false" />
    <member name="failure-reason" field="failure_reason" value-type="String" length="2000" />
    <member name="consumer-ip" field="consumer_ip" value-type="String" length="20" />
    <var name="old-status" value-type="int" />
    <query-defs>
      <query name="insert" type="INSERT">
        <statement><![CDATA[
        INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)
        ON DUPLICATE KEY UPDATE <FIELD name='last-modified-date'/> = NOW()
        ]]></statement>
      </query>
      <query name="find-by-status-and-consumer-ip" type="SELECT">
         <param name="status" />
         <param name="consumer-ip" />
         <statement><![CDATA[
         SELECT <FIELDS/> 
         FROM <TABLE/> 
         WHERE <FIELD name='status'/> = ${status}
            AND <FIELD name='schedule-time'/> <= NOW()
            <IF type='NOT_NULL' field='consumer-ip'>
               AND <FIELD name='consumer-ip'/> = ${consumer-ip}
            </IF>
            <IF type='NULL' field='consumer-ip'>
               AND (<FIELD name='consumer-ip'/> IS NULL OR <FIELD name='consumer-ip'/> = '')
            </IF>
         LIMIT 1
         ]]></statement>
      </query>
      <query name="update-by-PK-and-old-status" type="UPDATE">
        <param name="key-id" />
        <param name="old-status" />
        <statement><![CDATA[
        UPDATE <TABLE/>
        SET <FIELDS/>
        WHERE <FIELD name='id'/> = ${key-id}
           AND <FIELD name='status'/> = ${old-status}
        ]]></statement>
      </query>
    </query-defs>
  </entity>
  <entity name="report-config" table="report_config" alias="rc">
    <query-defs>
      <query name="find-by-report-name" type="SELECT">
        <param name="report-name" />
        <statement><![CDATA[
        SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='report-name'/> = ${report-name}
        ]]></statement>
      </query>
      <query name="update-by-report-name" type="UPDATE">
        <param name="report-name" />
        <statement><![CDATA[
        UPDATE <TABLE/>
        SET <FIELDS/>
        WHERE <FIELD name='report-name'/> = ${report-name}
        ]]></statement>
      </query>
    </query-defs>
  </entity>
</entities>

