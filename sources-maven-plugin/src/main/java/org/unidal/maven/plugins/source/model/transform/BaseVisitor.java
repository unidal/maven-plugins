/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package org.unidal.maven.plugins.source.model.transform;

import org.unidal.maven.plugins.source.model.IVisitor;
import org.unidal.maven.plugins.source.model.entity.ClassModel;
import org.unidal.maven.plugins.source.model.entity.CountModel;
import org.unidal.maven.plugins.source.model.entity.ProjectModel;
import org.unidal.maven.plugins.source.model.entity.RootModel;

public abstract class BaseVisitor implements IVisitor {
   @Override
   public void visitClass(ClassModel _class) {
      if (_class.getCount() != null) {
         visitCount(_class.getCount());
      }
   }

   @Override
   public void visitCount(CountModel count) {
   }

   @Override
   public void visitProject(ProjectModel project) {
      if (project.getCount() != null) {
         visitCount(project.getCount());
      }

      for (ClassModel class_ : project.getClasses()) {
         visitClass(class_);
      }
   }

   @Override
   public void visitRoot(RootModel root) {
      if (root.getCount() != null) {
         visitCount(root.getCount());
      }

      for (ProjectModel project : root.getProjects()) {
         visitProject(project);
      }
   }
}
